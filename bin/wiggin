#!/usr/bin/env node

var npm = require('npm')
  , minimist = require('minimist')
  , clone = require('clone')
  , rimraf = require('rimraf')
  , mkdirp = require('mkdirp')
  , exec = require('child_process').exec
  , argv = minimist(process.argv.slice(2))
  , v = require('valentine')
  , fs = require('fs')

var tasks = {
  create: function (flags) {
    exec('cp -r ' + __dirname + '/../scaffold/* .', function (err) {
      if (!err) {
        console.log('Created Scaffold!')
        mkdirp.sync(process.cwd() + '/node_modules')
        // yes i've heard of promises, just gimme a minute already.
        npm.load({}, function (err, npm) {
          npm.commands.install(["wiggin", "when", "debug", "supervisor"], function () {
            console.log('Installed Wiggin locally!')
            tasks.build({}, function () {
              tasks.ender({}, function () {
                console.log('Congratulations! Successfully created application. Now run `make` to start your application.')
              })
            })
          })
        })
      }
      else console.log('oops! something went wrong', err)
    })
  },
  build: function (flags, cb) {
    var config = require(process.cwd() + '/wiggin-conf.json')
    tasks.compile(config, function () {
      tasks.bundle(config)
      cb && cb()
    })
  },
  compile: function (flags, cb) {
    rimraf.sync('./public/js/views')
    var pugRunArgs = '--client --no-debug --path ./ ' + flags.views
    var pugRunPath = __dirname + '/../node_modules/.bin/pug'
    if (!fs.existsSync(pugRunPath)) {
      pugRunPath = __dirname + '/../../pug-cli/index.js'
      console.log('falling back to app level `pug-cli` library', pugRunPath)
    }
    exec(pugRunPath + ' ' + pugRunArgs, function (error, stdout, stderr) {
      if (error) {
        console.error(error)
        process.exit(1)
      }
      require(__dirname + '/../tasks/build-client-views').write(flags.views, 'public/js/views/', function () {
        console.log('successfully compiled client views', stdout)
        cb && cb()
      })
    })
  },
  bundle: function (flags) {
    var bundler = require(__dirname + '/../tasks/js-bundler')
    flags.bundles.forEach(function (path) {
      bundler.bundle(path, flags.shared)
    })
  },
  ender: function (flags, cb) {
    var pwd = process.cwd()
    var config = v.extend(require(pwd + '/wiggin-conf.json'), flags || {})
    mkdirp.sync(pwd + '/public/js/ender')
    var enderPath = pwd + '/' + config.ender
    process.chdir(enderPath)
    var cmd = __dirname + '/../node_modules/ender/bin/ender build . --output ' + pwd + '/' + config['public'] + '/js/ender/ender.js'
    console.log('executing command', cmd)
    exec(cmd, function (err, stout, sterr) {
      if (!err) {
        console.log('Successfully compiled your ender build', stout)
        cb && cb()
      } else console.log('Oops. Your Ender build has failed', stout, err, sterr)
      process.chdir(pwd)
    })
  },
  version: function () {
    var pkg = require('../package.json')
    console.log('Youâ€™re running Wiggin v' + pkg.version)
  }
}

argv._.forEach(function (task) {
  tasks[task] && tasks[task](clone(argv))
})
