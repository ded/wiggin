#!/usr/bin/env node

var npm = require('npm')
  , minimist = require('minimist')
  , clone = require('clone')
  , rimraf = require('rimraf')
  , mkdirp = require('mkdirp')
  , exec = require('child_process').exec
  , argv = minimist(process.argv.slice(2))

var tasks = {
  create: function (flags) {
    exec('cp -r ' + __dirname + '/../scaffold/* .', function (err) {
      if (!err) {
        console.log('Created Scaffold!')
        mkdirp.sync(process.cwd() + '/node_modules')
        npm.load({}, function (err, npm) {
          npm.commands.install(["wiggin"], function () {
            console.log('Install Wiggin locally!')
            tasks.build({}, function () {
              console.log('Congratulations! Successfully created application. Now run `make` to start your application.')
            })
          })
        })
      }
      else console.log('oops! something went wrong', err)
    })
  },
  build: function (flags, cb) {
    var config = require(process.cwd() + '/wiggin-conf.json')
    tasks.compile(config, function () {
      tasks.bundle(config)
      cb && cb()
    })
  },
  compile: function (flags, cb) {
    rimraf.sync('./public/js/views')
    exec(__dirname + '/../node_modules/jade/bin/jade.js --client --no-debug --path ./ ' + flags.views, function (error, stdout, stderr) {
      require(__dirname + '/../tasks/build-client-views').write(flags.views, 'public/js/views/', function () {
        !error && console.log('successfully compiled client views')
        cb && cb()
      })
    })
  },
  bundle: function (flags) {
    var bundler = require(__dirname + '/../tasks/js-bundler')
    flags.bundles.forEach(function (path) {
      bundler.bundle(path)
    })

  }
}

argv._.forEach(function (task) {
  tasks[task] && tasks[task](clone(argv))
})
